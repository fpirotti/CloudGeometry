% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateGeometricFeatures.R
\name{calcEigen}
\alias{calcEigen}
\title{calcEigen}
\usage{
calcEigen(pc3d, radius = 1, progress = T, threads = 0)
}
\arguments{
\item{pc3d}{matrix 3D point cloud in  matrix format with columns
with X Y Z coordinates, #' and rows of observations, so M rows
and 3 columns}

\item{radius}{maximum radius for which to find nearest neighbours}

\item{progress}{a logical boolean - if true a progress bar
will be shown}

\item{threads}{number of threads. If zero (default) is set, it will use t-2,
i.e. all threads except 2 if machine has more than 4 threads. Only works if
CloudGeometry was build with OpenMP support (see documentation)}
}
\value{
matrix with M rows and 3 columns with the eigenvalues of the 3D tensor
of the 3d coordinates of the nearest neighbours around each point.
(3 eigen values in descending order). If fewer than 3 neighbours are found,
NaN is returned for all 3 eigenvalues at that row.
}
\description{
Calculate Eigen values
}
\examples{
#subset the first 100 rows of the lidar point cloud example to limit execution time.
nn <- calcEigen(lidar[1:100,],5, TRUE)
}
